# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Publish Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up JDK 14
        uses: actions/setup-java@v2
        with:
          java-version: '14'
          distribution: 'adopt'
      - name: Set github number
        run: sed -i "s/undefined/$GITHUB_RUN_NUMBER/g" gradle.properties
      - name: Give permission
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: zip files
        id: zip
        run: |
          jar="$(find -name "MiraiBotConsole*.jar" -type f -printf "%f\n")"
          zp=${jar/.jar/.zip}
          gz=${jar/.jar/.tar.gz}
          cd build/libs/ && zip -r $zp * && cd -
          cd build/libs/ && tar -zcvf $gz * && cd -
          mv build/libs/$zp build/
          mv build/libs/$gz build/
          echo "::set-output name=zipfile::$zp"
          echo "::set-output name=gzipfile::$gz"
      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build/libs/
      - name: Upload zip to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/${{ steps.zip.outputs.zipfile }}
          asset_name: ${{ steps.zip.outputs.zipfile }}
          asset_content_type: application/zip
      - name: Upload gzip to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/${{ steps.zip.outputs.gzipfile }}
          asset_name: ${{ steps.zip.outputs.gzipfile }}
          asset_content_type: application/x-compressed-tar
      - name: Publish to maven
        run: ./gradlew publish
        env:
          MAVEN_URL: ${{ secrets.MAVEN_URL }}
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
