//file:noinspection GroovyAssignabilityCheck
//file:noinspection GrDeprecatedAPIUsage
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.20'
    id 'maven-publish'
    id "me.him188.kotlin-jvm-blocking-bridge" version "2.0.0-162.1"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = mvn_group
version = console_version
if (build_number != "undefined") version += "+build.${build_number}"

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib"
    api 'com.google.code.gson:gson:2.9.0'
    api "com.github.HyDevelop:HyConfigLib:3.1.52"
    api "net.mamoe:mirai-core:${mirai_version}"
    api "org.apache.logging.log4j:log4j-api:${log4j_version}"
    api "org.apache.logging.log4j:log4j-core:${log4j_version}"
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
}

task copyJar(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/libs/lib'
}

jar.dependsOn([copyJar])

jar {
    from("LICENSE")
    manifest {
        attributes ([
                "Main-Class" : "net.cjsah.console.MainKt",
                "Implementation-Version": console_version,
                "Class-Path" : configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(' ')
        ])
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task docJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.withType(Javadoc) {
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
          version console_version
// 			groupId group
            artifactId archivesBaseName
            from components.java
            artifact sourcesJar
            artifact docJar
        }
    }

    def ENV = System.getenv()
    if (ENV.MAVEN_URL) {
        repositories.maven {
            url ENV.MAVEN_URL
            credentials {
                username ENV.MAVEN_USERNAME
                password ENV.MAVEN_PASSWORD
            }
        }
    }
}
